version: "3"
services:
  wordpress:
    container_name: ${WORDPRESS_CONTAINER_NAME}
    build:
      context: .
      dockerfile: ./docker/wordpress/Dockerfile
    restart: always
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    volumes:
      - ./wordpress:/var/www/html
      - ./docker/wordpress/php.ini:/usr/local/etc/php/php.ini
    networks:
      - my_wordpress_network
    depends_on:
      - wordpressdb
  wordpressdb:
    container_name: ${WORDPRESS_DB_CONTAINER_NAME}
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TIME_ZONE}
      MYSQL_RANDOM_ROOT_PASSWORD: "1"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 13306:3306
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/conf.d/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/sqls:/docker-entrypoint-initdb.d
    tty: true
    networks:
      - my_wordpress_network
  mailhog:
    container_name: ${MAIL_CONTAINER_NAME}
    build:
      context: .
      dockerfile: ./docker/mail/Dockerfile
    restart: always
    ports:
      - "8025:8025"
      # - "1025:1025"
    depends_on:
      - wordpress
    networks:
      - my_wordpress_network
# volumes:
#   wordpress:
#   wordpressdb:
networks:
  my_wordpress_network:
